# SPDX-FileCopyrightText: 2021-2025 DINUM <floss@numerique.gouv.fr>
# SPDX-FileCopyrightText: 2024-2025 Universit√© Grenoble Alpes
# SPDX-License-Identifier: MIT

services:
  postgres:
    image: postgres:16
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-keycloak}
      POSTGRES_USER: ${POSTGRES_USER:-keycloak}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-keycloak}
    volumes:
      - ./docker-data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak}"]
      interval: 5s
      timeout: 3s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-keycloak}
      KC_DB_USERNAME: ${POSTGRES_USER:-keycloak}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-keycloak}

      # this disables the clusturing
      KC_CACHE: local

      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8092

      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true

      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded

      KC_LOG_LEVEL: ${KC_LOG_LEVEL:-INFO}

    command: start --import-realm

    volumes:
      - ./catalogi-realm.json:/opt/keycloak/data/import/catalogi-realm.json

    networks:
      - keycloak-network

    depends_on:
      postgres:
        condition: service_healthy

    restart: unless-stopped

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3;grep 'HTTP/1.1 200 OK' <&3",
        ]
      interval: 30s
      timeout: 10s
      retries: 15
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: keycloak-nginx
    ports:
      - "8092:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - keycloak-network
    depends_on:
      - keycloak
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  keycloak-network:
    driver: bridge
